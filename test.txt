SECTION .BSS
	BUFF RESB 1
SECTION .DATA
SECTION .TEXT
	GLOBAL _START

_START:
	NOP

READ:	MOV EAX,3 	; SPECIFY SYS_READ CALL
	MOV EBX,0	; SPECIFY FILE DESCRIPTOR 0: STANDARD INPUT
	MOV ECX,BUFF	; PASS ADRESS OF THE BUFFER TO READ TO 
	MOV EDX,1	; TELL SYS_READ TO READ 1 CHAR FROM STDIN
	INT 80H		; CALL SYS_READ

	CMP EAX,0	; LOOK AT SYS_READ RETURN VALUE IN EAX
	JE EXIT		; JUMP IF EQUAL TO 0 (EOF CHAR) TO EXIT
			; OR FALL THROUGH TO TEST FOR LOWERCASE

	CMP BYTE [BUFF],61H ; TEST INPUT CHAR AGAINST LOWER CASE 'A'
	JB WRITE	; IF BELOW 'A' IN ASCII CHART, NOT LOWERCASE
	
	CMP BYTE [BUFF],7AH ; TEST INPUT CHAR AGAINST LOWER CASE 'Z'
	JA WRITE	; IF ABOVE 'Z' IN ASCII CHAR, NOT LOWERCASE
			; AT THIS POINT WE HAVE A LOWERCASE CHARACTER
	SUB BYTE [BUFF],20H ; SUBSTRACT 20H FROM LOWERCASE TO GET UPPERCASE
			; AND THEN WRITE THE CHAR TO STDOUT
WRITE:	MOV EAX,4	; SPECIFY SYS_WRITE SYSTEM CALL
	MOV EBX,1	; SPECIFY FILE DESCRIPTOR 1 STDOUT
	MOV ECX,BUFF	; PASS ADDRESS OF THE CHARACTER TO WRITE
	MOV EDX,1	; PASS NUMBER OF CHARS TO WRITE
	INT 80H		; CALL SYS_WRITE
	JMP READ	; THEN GO TO THE BEGGINING TO GET ANOTHER CHARACTER

EXIT:	MOV EAX, 1	; CODE FOR EXIT SYSCALL
	MOV EBX, 0	; RETURN CODE 0 (PROGRAM TERMINATED WITHOUT ERRORS)
	INT 80H		; MAKE A KERNEL CALL TO EXIT PROGRAM



	NOP


